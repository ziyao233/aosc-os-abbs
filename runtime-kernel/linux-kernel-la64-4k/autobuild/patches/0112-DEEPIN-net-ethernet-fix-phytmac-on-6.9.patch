From af404ffd007589ef8db66fb3e9052787ee32098b Mon Sep 17 00:00:00 2001
From: Mingcong Bai <baimingcong@uniontech.com>
Date: Fri, 28 Jun 2024 14:08:40 +0800
Subject: [PATCH 112/164] DEEPIN: net: ethernet: fix phytmac on 6.9

Declare multiple functions as static functions to suppress warnings about
missing prototypes.

Signed-off-by: Mingcong Bai <baimingcong@uniontech.com>

Link: https://github.com/deepin-community/kernel-rolling/commit/33111ef0af784d27a95695556d797f5c8eb3091d
Signed-off-by: Kexy Biscuit <kexybiscuit@aosc.io>
---
 drivers/net/ethernet/phytium/phytmac_main.c     | 10 +++++-----
 drivers/net/ethernet/phytium/phytmac_platform.c |  1 -
 drivers/net/ethernet/phytium/phytmac_v2.c       | 16 ++++++++--------
 3 files changed, 13 insertions(+), 14 deletions(-)

diff --git a/drivers/net/ethernet/phytium/phytmac_main.c b/drivers/net/ethernet/phytium/phytmac_main.c
index c172103a9736..d329aded10f0 100644
--- a/drivers/net/ethernet/phytium/phytmac_main.c
+++ b/drivers/net/ethernet/phytium/phytmac_main.c
@@ -293,7 +293,7 @@ inline struct phytmac_dma_desc *phytmac_get_rx_desc(struct phytmac_queue *queue,
 	return &queue->rx_ring[index & (queue->pdata->rx_ring_size - 1)];
 }
 
-struct sk_buff *phytmac_get_rx_skb(struct phytmac_queue *queue,
+static struct sk_buff *phytmac_get_rx_skb(struct phytmac_queue *queue,
 				   unsigned int index)
 {
 	return queue->rx_skb[index & (queue->pdata->rx_ring_size - 1)];
@@ -1349,7 +1349,7 @@ static int phytmac_phylink_connect(struct phytmac *pdata)
 	return 0;
 }
 
-int phytmac_pcs_config(struct phylink_pcs *pcs, unsigned int mode,
+static int phytmac_pcs_config(struct phylink_pcs *pcs, unsigned int mode,
 		       phy_interface_t interface,
 		       const unsigned long *advertising,
 		       bool permit_pause_to_mac)
@@ -1357,7 +1357,7 @@ int phytmac_pcs_config(struct phylink_pcs *pcs, unsigned int mode,
 	return 0;
 }
 
-void phytmac_pcs_link_up(struct phylink_pcs *pcs, unsigned int mode,
+static void phytmac_pcs_link_up(struct phylink_pcs *pcs, unsigned int mode,
 			 phy_interface_t interface, int speed, int duplex)
 {
 	struct phytmac *pdata = container_of(pcs, struct phytmac, phylink_pcs);
@@ -1500,7 +1500,7 @@ static void phytmac_mac_link_up(struct phylink_config *config,
 	netif_tx_wake_all_queues(ndev);
 }
 
-int phytmac_mdio_register(struct phytmac *pdata)
+static int phytmac_mdio_register(struct phytmac *pdata)
 {
 	struct phytmac_hw_if *hw_if = pdata->hw_if;
 	int ret;
@@ -1981,7 +1981,7 @@ static int phytmac_init(struct phytmac *pdata)
 	return 0;
 }
 
-void phytmac_default_config(struct phytmac *pdata)
+static void phytmac_default_config(struct phytmac *pdata)
 {
 	struct net_device *ndev = pdata->ndev;
 
diff --git a/drivers/net/ethernet/phytium/phytmac_platform.c b/drivers/net/ethernet/phytium/phytmac_platform.c
index b72e728a924b..797909211fed 100644
--- a/drivers/net/ethernet/phytium/phytmac_platform.c
+++ b/drivers/net/ethernet/phytium/phytmac_platform.c
@@ -77,7 +77,6 @@ static int phytmac_get_phy_mode(struct platform_device *pdev)
 static int phytmac_plat_probe(struct platform_device *pdev)
 {
 	const struct phytmac_config *phytmac_config = &phytium_1p0_config;
-	struct device_node *np = pdev->dev.of_node;
 	struct resource *regs;
 	struct phytmac *pdata;
 	int ret, i;
diff --git a/drivers/net/ethernet/phytium/phytmac_v2.c b/drivers/net/ethernet/phytium/phytmac_v2.c
index df142aa6797f..77fde5c5e291 100644
--- a/drivers/net/ethernet/phytium/phytmac_v2.c
+++ b/drivers/net/ethernet/phytium/phytmac_v2.c
@@ -60,7 +60,7 @@ static int phytmac_msg_send(struct phytmac *pdata, u16 cmd_id,
 	return ret;
 }
 
-void phytmac_reset_hw(struct phytmac *pdata)
+static void phytmac_reset_hw(struct phytmac *pdata)
 {
 	int q;
 	u16 cmd_id, cmd_subid;
@@ -115,7 +115,7 @@ static int phytmac_get_mac_addr(struct phytmac *pdata, u8 *addr)
 	return 0;
 }
 
-int phytmac_set_mac_addr(struct phytmac *pdata, const u8 *addr)
+static int phytmac_set_mac_addr(struct phytmac *pdata, const u8 *addr)
 {
 	u16 cmd_id;
 	u16 cmd_subid;
@@ -260,7 +260,7 @@ static int phytmac_init_ring_hw(struct phytmac *pdata)
 	return 0;
 }
 
-int phytmac_init_msg_ring(struct phytmac *pdata)
+static int phytmac_init_msg_ring(struct phytmac *pdata)
 {
 	u32 size = 0;
 
@@ -317,7 +317,7 @@ static int phytmac_get_feature_all(struct phytmac *pdata)
 	return 0;
 }
 
-void phytmac_get_regs(struct phytmac *pdata, u32 *reg_buff)
+static void phytmac_get_regs(struct phytmac *pdata, u32 *reg_buff)
 {
 	u16 cmd_id, cmd_subid;
 	u16 reg_num;
@@ -1037,7 +1037,7 @@ static void phytmac_get_time(struct phytmac *pdata, struct timespec64 *ts)
 	ts->tv_sec = (((u64)sech << 32) | secl) & TIMER_SEC_MAX_VAL;
 }
 
-void phytmac_set_time(struct phytmac *pdata, time64_t sec, long nsec)
+static void phytmac_set_time(struct phytmac *pdata, time64_t sec, long nsec)
 {
 	u32 secl, sech;
 
@@ -1050,7 +1050,7 @@ void phytmac_set_time(struct phytmac *pdata, time64_t sec, long nsec)
 	PHYTMAC_WRITE(pdata, PHYTMAC_TIMER_NSEC, nsec);
 }
 
-void phytmac_clear_time(struct phytmac *pdata)
+static void phytmac_clear_time(struct phytmac *pdata)
 {
 	u32 value;
 
@@ -1068,7 +1068,7 @@ void phytmac_clear_time(struct phytmac *pdata)
 	PHYTMAC_WRITE(pdata, PHYTMAC_TIMER_ADJUST, 0);
 }
 
-int phytmac_set_tsmode(struct phytmac *pdata, struct ts_ctrl *ctrl)
+static int phytmac_set_tsmode(struct phytmac *pdata, struct ts_ctrl *ctrl)
 {
 	u16 cmd_id, cmd_subid;
 	struct phytmac_ts_config para;
@@ -1129,7 +1129,7 @@ static int phytmac_adjust_fine(struct phytmac *pdata, long ppm, bool negative)
 	return 0;
 }
 
-int phytmac_adjust_time(struct phytmac *pdata, s64 delta, int neg)
+static int phytmac_adjust_time(struct phytmac *pdata, s64 delta, int neg)
 {
 	u32 adj;
 
-- 
2.47.0

