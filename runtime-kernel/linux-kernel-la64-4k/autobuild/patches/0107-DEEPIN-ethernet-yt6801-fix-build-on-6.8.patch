From 314509854556d5fad052eb85dab4d102c7c19907 Mon Sep 17 00:00:00 2001
From: root <baimingcong@uniontech.com>
Date: Tue, 23 Jul 2024 11:00:20 +0800
Subject: [PATCH 107/164] DEEPIN: ethernet: yt6801: fix build on >= 6.8

Adapt to ethtool.h changes introduced in 6.8.

Signed-off-by: root <baimingcong@uniontech.com>

Link: https://github.com/deepin-community/kernel-rolling/commit/0347cee702d62ebb18396533b374ec993cf8e89f
Signed-off-by: Kexy Biscuit <kexybiscuit@aosc.io>
---
 .../motorcomm/yt6801/fuxi-gmac-ethtool.c      | 35 ++++++++++---------
 1 file changed, 18 insertions(+), 17 deletions(-)

diff --git a/drivers/net/ethernet/motorcomm/yt6801/fuxi-gmac-ethtool.c b/drivers/net/ethernet/motorcomm/yt6801/fuxi-gmac-ethtool.c
index 05aa42f90ad8..d0989eac966a 100644
--- a/drivers/net/ethernet/motorcomm/yt6801/fuxi-gmac-ethtool.c
+++ b/drivers/net/ethernet/motorcomm/yt6801/fuxi-gmac-ethtool.c
@@ -262,8 +262,8 @@ static void fxgmac_get_reta(struct fxgmac_pdata *pdata, u32 *indir)
 		indir[i] = pdata->rss_table[i] & rss_m;
 }
 
-static int fxgmac_get_rxfh(struct net_device *netdev, u32 *indir, u8 *key,
-			   u8 *hfunc)
+static int fxgmac_get_rxfh(struct net_device *netdev,
+			   struct ethtool_rxfh_param *rxfh)
 {
 	struct fxgmac_pdata *pdata = netdev_priv(netdev);
 
@@ -271,26 +271,27 @@ static int fxgmac_get_rxfh(struct net_device *netdev, u32 *indir, u8 *key,
 	 * ETH_RSS_HASH_XOR        __ETH_RSS_HASH(XOR)
 	 * ETH_RSS_HASH_CRC32      __ETH_RSS_HASH(CRC32)
 	 */
-	if (hfunc) {
-		*hfunc = ETH_RSS_HASH_TOP;
+	if (rxfh->hfunc) {
+		rxfh->hfunc = ETH_RSS_HASH_TOP;
 		DPRINTK("fxmac, get_rxfh for hash function\n");
 	}
 
-	if (indir) {
-		fxgmac_get_reta(pdata, indir);
+	if (rxfh->indir) {
+		fxgmac_get_reta(pdata, rxfh->indir);
 		DPRINTK("fxmac, get_rxfh for indirection tab\n");
 	}
 
-	if (key) {
-		memcpy(key, pdata->rss_key, fxgmac_get_rxfh_key_size(netdev));
+	if (rxfh->key) {
+		memcpy(rxfh->key, pdata->rss_key, fxgmac_get_rxfh_key_size(netdev));
 		DPRINTK("fxmac, get_rxfh  for hash key\n");
 	}
 
 	return 0;
 }
 
-static int fxgmac_set_rxfh(struct net_device *netdev, const u32 *indir,
-			   const u8 *key, const u8 hfunc)
+static int fxgmac_set_rxfh(struct net_device *netdev,
+			   struct ethtool_rxfh_param *rxfh,
+			   struct netlink_ext_ack *extack)
 {
 	struct fxgmac_pdata *pdata = netdev_priv(netdev);
 	struct fxgmac_hw_ops *hw_ops = &pdata->hw_ops;
@@ -299,13 +300,13 @@ static int fxgmac_set_rxfh(struct net_device *netdev, const u32 *indir,
 	int max_queues = FXGMAC_MAX_DMA_CHANNELS;
 
 	DPRINTK("fxmac, set_rxfh callin, indir=%lx, key=%lx, func=%02x\n",
-		(unsigned long)indir, (unsigned long)key, hfunc);
+		(unsigned long)rxfh->indir, (unsigned long)rxfh->key, rxfh->hfunc);
 
-	if (hfunc)
+	if (rxfh->hfunc)
 		return -EINVAL;
 
 	/* Fill out the redirection table */
-	if (indir) {
+	if (rxfh->indir) {
 #if FXGMAC_MSIX_CH0RXDIS_EN
 		max_queues = max_queues;
 		reta_entries = reta_entries;
@@ -315,19 +316,19 @@ static int fxgmac_set_rxfh(struct net_device *netdev, const u32 *indir,
 #else
 		/* double check user input. */
 		for (i = 0; i < reta_entries; i++)
-			if (indir[i] >= max_queues)
+			if (rxfh->indir[i] >= max_queues)
 				return -EINVAL;
 
 		for (i = 0; i < reta_entries; i++)
-			pdata->rss_table[i] = indir[i];
+			pdata->rss_table[i] = rxfh->indir[i];
 
 		hw_ops->write_rss_lookup_table(pdata);
 #endif
 	}
 
 	/* Fill out the rss hash key */
-	if (FXGMAC_RSS_HASH_KEY_LINUX && key)
-		hw_ops->set_rss_hash_key(pdata, key);
+	if (FXGMAC_RSS_HASH_KEY_LINUX && rxfh->key)
+		hw_ops->set_rss_hash_key(pdata, rxfh->key);
 
 	return 0;
 }
-- 
2.47.0

