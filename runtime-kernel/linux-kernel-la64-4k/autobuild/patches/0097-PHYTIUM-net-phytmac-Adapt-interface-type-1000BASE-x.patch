From 8763095d1d8068901f0de3a59ae5e2720daf3197 Mon Sep 17 00:00:00 2001
From: Li Wencheng <liwencheng@phytium.com.cn>
Date: Fri, 29 Mar 2024 16:49:17 +0800
Subject: [PATCH 097/164] PHYTIUM: net/phytmac: Adapt interface type 1000BASE-x

Added 1000BASE-x interface type support for phymac driver.

Signed-off-by: Li Wencheng <liwencheng@phytium.com.cn>
Signed-off-by: Wang Yinfeng <wangyinfeng@phytium.com.cn>
Change-Id: I7f950dad763afd4814c73e0ca67d08168d5b2cb8

Link: https://gitee.com/phytium_embedded/phytium-linux-kernel/commit/b590f0e74c19a7da0dd49e0777600cb39d50bf84
Signed-off-by: Kexy Biscuit <kexybiscuit@aosc.io>
---
 drivers/net/ethernet/phytium/phytmac_main.c |  1 +
 drivers/net/ethernet/phytium/phytmac_v1.c   | 35 ++++++++++++++++++---
 drivers/net/ethernet/phytium/phytmac_v1.h   |  2 ++
 3 files changed, 34 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/phytium/phytmac_main.c b/drivers/net/ethernet/phytium/phytmac_main.c
index da4e06736280..c172103a9736 100644
--- a/drivers/net/ethernet/phytium/phytmac_main.c
+++ b/drivers/net/ethernet/phytium/phytmac_main.c
@@ -1560,6 +1560,7 @@ static void phytmac_validate(struct phylink_config *config,
 	struct phytmac *pdata = netdev_priv(ndev);
 
 	if (state->interface != PHY_INTERFACE_MODE_SGMII &&
+	    state->interface != PHY_INTERFACE_MODE_1000BASEX &&
 	    state->interface != PHY_INTERFACE_MODE_2500BASEX &&
 	    state->interface != PHY_INTERFACE_MODE_5GBASER &&
 	    state->interface != PHY_INTERFACE_MODE_10GBASER &&
diff --git a/drivers/net/ethernet/phytium/phytmac_v1.c b/drivers/net/ethernet/phytium/phytmac_v1.c
index 79df9a7f981f..ec95c6c79b06 100644
--- a/drivers/net/ethernet/phytium/phytmac_v1.c
+++ b/drivers/net/ethernet/phytium/phytmac_v1.c
@@ -161,6 +161,20 @@ static int phytmac_enable_autoneg(struct phytmac *pdata, int enable)
 	return 0;
 }
 
+static int phytmac_pcs_software_reset(struct phytmac *pdata, int reset)
+{
+	u32 value = PHYTMAC_READ(pdata, PHYTMAC_PCSCTRL);
+
+	if (reset)
+		value |= PHYTMAC_BIT(PCS_RESET);
+	else
+		value &= ~PHYTMAC_BIT(PCS_RESET);
+
+	PHYTMAC_WRITE(pdata, PHYTMAC_PCSCTRL, value);
+
+	return 0;
+}
+
 static int phytmac_mac_linkup(struct phytmac *pdata, phy_interface_t interface,
 			      int speed, int duplex)
 {
@@ -401,6 +415,10 @@ static int phytmac_init_hw(struct phytmac *pdata)
 
 	if (pdata->capacities & PHYTMAC_CAPS_TAILPTR)
 		PHYTMAC_WRITE(pdata, PHYTMAC_TAIL_ENABLE, 0x80000001);
+
+	if (phy_interface_mode_is_8023z(pdata->phy_interface))
+		phytmac_pcs_software_reset(pdata, 1);
+
 	return 0;
 }
 
@@ -1047,9 +1065,16 @@ static void phytmac_mac_interface_config(struct phytmac *pdata, unsigned int mod
 		    | PHYTMAC_BIT(SPEED) | PHYTMAC_BIT(FD) | PHYTMAC_BIT(GM_EN));
 	ctrl &= ~(PHYTMAC_BIT(HIGHSPEED) | PHYTMAC_BIT(2PT5G));
 
-	if (state->interface == PHY_INTERFACE_MODE_SGMII ||
-	    state->interface == PHY_INTERFACE_MODE_2500BASEX) {
+	if (state->interface == PHY_INTERFACE_MODE_SGMII) {
 		config |= PHYTMAC_BIT(SGMII_EN) | PHYTMAC_BIT(PCS_EN);
+		if (state->speed == SPEED_1000)
+			config |= PHYTMAC_BIT(GM_EN);
+		else if (state->speed == SPEED_2500)
+			config |= PHYTMAC_BIT(2PT5G);
+	} else if (state->interface == PHY_INTERFACE_MODE_1000BASEX) {
+		config |= PHYTMAC_BIT(PCS_EN) | PHYTMAC_BIT(GM_EN);
+	} else if (state->interface == PHY_INTERFACE_MODE_2500BASEX) {
+		config |= PHYTMAC_BIT(2PT5G) | PHYTMAC_BIT(PCS_EN);
 	} else if (state->interface == PHY_INTERFACE_MODE_10GBASER ||
 		   state->interface == PHY_INTERFACE_MODE_USXGMII ||
 		   state->interface == PHY_INTERFACE_MODE_5GBASER) {
@@ -1078,15 +1103,17 @@ static void phytmac_mac_interface_config(struct phytmac *pdata, unsigned int mod
 		PHYTMAC_WRITE(pdata, PHYTMAC_NCONFIG, config);
 
 	/* Disable AN for SGMII fixed link configuration, enable otherwise.*/
-	if (state->interface == PHY_INTERFACE_MODE_SGMII ||
-	    state->interface == PHY_INTERFACE_MODE_2500BASEX)
+	if (state->interface == PHY_INTERFACE_MODE_SGMII)
 		phytmac_enable_autoneg(pdata, mode == MLO_AN_FIXED ? 0 : 1);
+	if (state->interface == PHY_INTERFACE_MODE_1000BASEX)
+		phytmac_enable_autoneg(pdata, 1);
 }
 
 static unsigned int phytmac_pcs_get_link(struct phytmac *pdata,
 					 phy_interface_t interface)
 {
 	if (interface == PHY_INTERFACE_MODE_SGMII ||
+	    interface == PHY_INTERFACE_MODE_1000BASEX ||
 	    interface == PHY_INTERFACE_MODE_2500BASEX)
 		return PHYTMAC_READ_BITS(pdata, PHYTMAC_NSTATUS, PCS_LINK);
 	else if (interface == PHY_INTERFACE_MODE_USXGMII ||
diff --git a/drivers/net/ethernet/phytium/phytmac_v1.h b/drivers/net/ethernet/phytium/phytmac_v1.h
index 6f2b521aaebd..d8de2c26cab4 100644
--- a/drivers/net/ethernet/phytium/phytmac_v1.h
+++ b/drivers/net/ethernet/phytium/phytmac_v1.h
@@ -228,6 +228,8 @@ extern struct phytmac_hw_if phytmac_1p0_hw;
 /* PCSCTRL register */
 #define PHYTMAC_AUTONEG_INDEX			12
 #define PHYTMAC_AUTONEG_WIDTH			1
+#define PHYTMAC_PCS_RESET_INDEX			15
+#define PHYTMAC_PCS_RESET_WIDTH			1
 
 /* DEFAULT1 register */
 #define PHYTMAC_DBW_INDEX			25
-- 
2.47.0

