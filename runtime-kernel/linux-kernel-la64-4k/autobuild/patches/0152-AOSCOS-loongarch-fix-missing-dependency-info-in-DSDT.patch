From b41827627abae18b5b3e4a2be18cfa72b663aa72 Mon Sep 17 00:00:00 2001
From: Miao Wang <shankerwangmiao@gmail.com>
Date: Thu, 25 Jul 2024 16:09:19 +0800
Subject: [PATCH 152/164] AOSCOS: loongarch: fix missing dependency info in
 DSDT

On machines with legacy firmware with BPI01000 version, the devices on
the LIO bus lackes the dependency on the PCI root controller, causing
the memory-mapped address of the legacy IO ports read before the setup
of the mapping, resulting in kernel panic. Such DSDT can work on the
legacy loongarch linux port because the leading 16K is unconditionally
registered, before the enumeration of the devices in the DSDT table.

This patch addes such dependency info, to order the initialization of
the devices on the LIO bus after the initialization of the PCI root
controller, fixing this problem. However, the addition should be done on
each possible LIO device, and currently the patch only includes the
legacy EC device on some laptops located at the path \_SB.PCI0.LPC.EC.
Thus, this patch will be improved to include more devices.

The above behavior is only enabled when BPI data and the BPI01000 version
is detected.

Signed-off-by: Miao Wang <shankerwangmiao@gmail.com>
Signed-off-by: Kexy Biscuit <kexybiscuit@aosc.io>
---
 arch/loongarch/include/asm/acpi.h   |  2 ++
 arch/loongarch/kernel/legacy_boot.c | 47 +++++++++++++++++++++++++++++
 drivers/acpi/bus.c                  |  1 +
 include/linux/acpi.h                |  4 +++
 4 files changed, 54 insertions(+)

diff --git a/arch/loongarch/include/asm/acpi.h b/arch/loongarch/include/asm/acpi.h
index c954d15d0a47..8d8551c2b6c0 100644
--- a/arch/loongarch/include/asm/acpi.h
+++ b/arch/loongarch/include/asm/acpi.h
@@ -51,6 +51,8 @@ extern void acpi_arch_os_table_override (struct acpi_table_header *existing_tabl
 extern void acpi_arch_table_init_complete(void);
 #define ACPI_HAVE_ARCH_PCI_ROOT_RES_FILTER
 extern void acpi_arch_pci_probe_root_dev_filter(struct resource_entry *entry);
+#define ACPI_HAVE_ARCH_INIT
+extern void acpi_arch_init(void);
 
 #endif /* !CONFIG_ACPI */
 
diff --git a/arch/loongarch/kernel/legacy_boot.c b/arch/loongarch/kernel/legacy_boot.c
index 7043bfd0399d..3ec69ffd8b94 100644
--- a/arch/loongarch/kernel/legacy_boot.c
+++ b/arch/loongarch/kernel/legacy_boot.c
@@ -617,6 +617,53 @@ void acpi_arch_pci_probe_root_dev_filter(struct resource_entry *entry)
 	}
 }
 
+static __initconst const struct {
+	struct acpi_table_header header;
+	unsigned char code [];
+} __packed dsdt_add_aml_code = {
+	.header = {
+		.signature = ACPI_SIG_DSDT
+	},
+	.code = {
+		                    0x14,0x21,0x5C,0x2F,  /* 00000020    "    .!\/" */
+		0x05,0x5F,0x53,0x42,0x5F,0x50,0x43,0x49,  /* 00000028    "._SB_PCI" */
+		0x30,0x4C,0x50,0x43,0x5F,0x45,0x43,0x5F,  /* 00000030    "0LPC_EC_" */
+		0x5F,0x5F,0x44,0x45,0x50,0x08,0xA4,0x12,  /* 00000038    "__DEP..." */
+		0x06,0x01,0x50,0x43,0x49,0x30             /* 00000040    "..PCI0"   */
+	},
+};
+
+void __init acpi_arch_init (){
+	if (bpi_version == BPI_VERSION_NONE) {
+		return;
+	}
+	if (bpi_version > BPI_VERSION_V1) {
+		return;
+	}
+	pr_info("BPI: Trying to patch DSDT\n");
+
+	acpi_status status;
+	acpi_handle handle;
+
+	status = acpi_get_handle(NULL, "\\_SB.PCI0.LPC.EC", &handle);
+	if (ACPI_FAILURE(status)) {
+		if (status != AE_NOT_FOUND) {
+			pr_info("BPI: Unable to find EC device: %s\n", acpi_format_exception(status));
+		}
+		return;
+	}
+	if (acpi_has_method(handle, "_DEP")) {
+		return;
+	}
+
+	status = acpi_install_method((u8 *)&dsdt_add_aml_code);
+	if (ACPI_FAILURE(status)) {
+		pr_info("BPI: Unable to patch DSDT(0x%x)\n", status);
+		return;
+	}
+	acpi_handle_info(handle, "BPI: Patched DSDT\n");
+}
+
 int loongarch_have_legacy_bpi (void){
 	return have_bpi;
 }
diff --git a/drivers/acpi/bus.c b/drivers/acpi/bus.c
index 284bc2e03580..4f807f4bb576 100644
--- a/drivers/acpi/bus.c
+++ b/drivers/acpi/bus.c
@@ -1459,6 +1459,7 @@ static int __init acpi_init(void)
 	acpi_hest_init();
 	acpi_ghes_init();
 	acpi_arm_init();
+	acpi_arch_init();
 	acpi_scan_init();
 	acpi_ec_init();
 	acpi_debugfs_init();
diff --git a/include/linux/acpi.h b/include/linux/acpi.h
index fff07ee5116b..d0231e068e08 100644
--- a/include/linux/acpi.h
+++ b/include/linux/acpi.h
@@ -1539,6 +1539,10 @@ void acpi_arm_init(void);
 static inline void acpi_arm_init(void) { }
 #endif
 
+#ifndef ACPI_HAVE_ARCH_INIT
+static inline void acpi_arch_init(void) {}
+#endif
+
 #ifdef CONFIG_ACPI_PCC
 void acpi_init_pcc(void);
 #else
-- 
2.47.0

